plugins {
	id 'java'
	id 'jacoco'
	id 'org.sonarqube' version '3.3'
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'org.barfuin.gradle.jacocolog' version '1.0.1'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

group = 'com.fbc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

apply plugin: 'jacoco'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Web Starter
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Util
	implementation "io.vavr:vavr:0.10.4"

	// Telegram API
	implementation 'org.telegram:telegrambots-spring-boot-starter:6.0.1'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.assertj:assertj-core:3.22.0'

}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				minimum = 0.5
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

sonarqube {
	properties {
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.organization', 'fbc-bot'
		property 'sonar.projectKey', 'vladilyushchenko_fbc-bot'
	}
}
